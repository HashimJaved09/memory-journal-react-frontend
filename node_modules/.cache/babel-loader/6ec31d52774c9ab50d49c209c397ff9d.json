{"ast":null,"code":"var _jsxFileName = \"/Users/hashimjaved/Documents/fiverr/memories-app/src/components/edit-memory.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { server } from '../global';\n\nclass EditMemory extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      description: '',\n      image: '',\n      vtitle: false,\n      vtitletext: '',\n      vdescription: false,\n      vdescriptiontext: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let model = {\n        title: this.state.title,\n        description: this.state.description,\n        image: this.state.image\n      };\n      this.setState({\n        vtitle: false,\n        vtitletext: '',\n        vdescription: false,\n        vdescriptiontext: ''\n      });\n      let memory_id = this.props.match.params.id;\n      axios.put(server + '/core/api/memory/' + memory_id, model, {\n        headers: {\n          'Authorization': 'JWT ' + localStorage.getItem('token')\n        }\n      }).then(data => {\n        this.setState({\n          title: data.data.title,\n          description: data.data.description,\n          image: data.data.image\n        });\n        this.props.history.push('/memories');\n      }).catch(error => {\n        try {\n          if (error.response.data.username) {\n            this.setState({\n              vusername: true,\n              vusernametext: error.response.data.username[0]\n            });\n          }\n\n          if (error.response.data.password) {\n            this.setState({\n              vpassword: true,\n              vpasswordtext: error.response.data.password[0]\n            });\n          }\n\n          if (error.response.data.non_field_errors) {\n            this.setState({\n              vauthenticate: true,\n              vauthenticatetext: error.response.data.non_field_errors[0]\n            });\n          }\n        } catch (error) {\n          console.log(error.response);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('token') == null) {\n      this.props.history.push('/login');\n    }\n\n    let memory_id = this.props.match.params.id;\n    axios.get(server + '/core/api/memory/' + memory_id, {\n      headers: {\n        'Authorization': 'JWT ' + localStorage.getItem('token')\n      }\n    }).then(data => {\n      this.setState({\n        title: data.data.title,\n        description: data.data.description,\n        image: data.data.image\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Edit Your Memory\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Memory Title:\"), React.createElement(\"input\", {\n      id: \"title\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"red-text helper-text\",\n      id: \"vtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.vtitle ? this.state.vtitletext : '')), React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Memory Description:\"), React.createElement(\"textarea\", {\n      id: \"description\",\n      className: \"materialize-textarea\",\n      onChange: this.handleChange,\n      value: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"red-text helper-text\",\n      id: \"vdescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.vdescription ? this.state.vdescriptiontext : '')), React.createElement(\"input\", {\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"waves-effect waves-light btn white-text blue darken-4 pull\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default EditMemory;","map":{"version":3,"sources":["/Users/hashimjaved/Documents/fiverr/memories-app/src/components/edit-memory.js"],"names":["React","Component","axios","server","EditMemory","state","title","description","image","vtitle","vtitletext","vdescription","vdescriptiontext","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","model","memory_id","props","match","params","put","headers","localStorage","getItem","then","data","history","push","catch","error","response","username","vusername","vusernametext","password","vpassword","vpasswordtext","non_field_errors","vauthenticate","vauthenticatetext","console","log","componentDidMount","get","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { server } from '../global';\n\nclass EditMemory extends Component {\n    state = {\n        title: '',\n        description: '',\n        image: '',\n        vtitle: false,\n        vtitletext: '',\n        vdescription: false,\n        vdescriptiontext: ''\n    };\n\n    componentDidMount() {\n        if(localStorage.getItem('token') == null) {\n            this.props.history.push('/login');\n        }\n        let memory_id = this.props.match.params.id;\n        axios.get(server + '/core/api/memory/' + memory_id, { headers: { 'Authorization': 'JWT ' + localStorage.getItem('token') }})\n            .then(data => {\n                this.setState({\n                    title: data.data.title,\n                    description: data.data.description,\n                    image: data.data.image\n                });\n            })\n            .catch(error => {\n                console.log(error);\n            }\n        )\n    }\n    \n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let model = {\n            title: this.state.title,\n            description: this.state.description,\n            image: this.state.image\n        };\n        this.setState({\n            vtitle: false,\n            vtitletext: '',\n            vdescription: false,\n            vdescriptiontext: '',\n        });\n        let memory_id = this.props.match.params.id;\n        axios.put(server + '/core/api/memory/' + memory_id, model, { headers: { 'Authorization': 'JWT ' + localStorage.getItem('token') }})\n            .then(data => {\n                this.setState({\n                    title: data.data.title,\n                    description: data.data.description,\n                    image: data.data.image\n                });\n                this.props.history.push('/memories');\n            })\n            .catch(error => {\n                try {\n                    if (error.response.data.username) {\n                        this.setState({\n                            vusername: true,\n                            vusernametext: error.response.data.username[0]\n                        });\n                    }\n                    if (error.response.data.password) {\n                        this.setState({\n                            vpassword: true,\n                            vpasswordtext: error.response.data.password[0]\n                        });\n                    }\n                    if (error.response.data.non_field_errors) {\n                        this.setState({\n                            vauthenticate: true,\n                            vauthenticatetext: error.response.data.non_field_errors[0]\n                        });\n                    }\n                }\n                catch(error) {\n                    console.log(error.response);\n                }\n            }\n        )\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <br />\n                <br />\n                <h3>Edit Your Memory</h3>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <span>Memory Title:</span>\n                            <input id=\"title\" type=\"text\" onChange={this.handleChange} value={this.state.title} />\n                            <span className=\"red-text helper-text\" id=\"vtitle\">\n                                { this.state.vtitle ? this.state.vtitletext : '' }\n                            </span>\n                        </div>\n                        <div className=\"input-field col s12\">\n                            <span>Memory Description:</span>\n                            <textarea id=\"description\" className=\"materialize-textarea\" onChange={this.handleChange} value={this.state.description}></textarea>\n                            <span className=\"red-text helper-text\" id=\"vdescription\">\n                                { this.state.vdescription ? this.state.vdescriptiontext : '' }\n                            </span>\n                        </div>\n                        <input type=\"file\" />\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <button className=\"waves-effect waves-light btn white-text blue darken-4 pull\" type=\"submit\">Submit</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default EditMemory;"]},"metadata":{},"sourceType":"module"}